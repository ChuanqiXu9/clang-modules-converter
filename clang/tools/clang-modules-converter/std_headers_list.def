#ifndef STD_HEADER
#error "define STD_HEADER macro before including this file"
#endif

STD_HEADER(algorithm)
STD_HEADER(any)
STD_HEADER(array)
STD_HEADER(atomic)
STD_HEADER(barrier)
STD_HEADER(bit)
STD_HEADER(bitset)
STD_HEADER(cctype)
STD_HEADER(cerrno)
STD_HEADER(cfenv)
STD_HEADER(cfloat)
STD_HEADER(charconv)
STD_HEADER(chrono)
STD_HEADER(cinttypes)
STD_HEADER(clocale)
STD_HEADER(cmath)
STD_HEADER(codecvt)
STD_HEADER(compare)
STD_HEADER(complex)
STD_HEADER(concepts)
STD_HEADER(condition_variable)
STD_HEADER(coroutine)
STD_HEADER(csetjmp)
STD_HEADER(csignal)
STD_HEADER(cstdarg)
STD_HEADER(cstddef)
STD_HEADER(cstdint)
STD_HEADER(cstdio)
STD_HEADER(cstdlib)
STD_HEADER(cstring)
STD_HEADER(ctime)
STD_HEADER(cuchar)
STD_HEADER(cwchar)
STD_HEADER(cwctype)
STD_HEADER(deque)
STD_HEADER(exception)
STD_HEADER(execution)
STD_HEADER(expected)
STD_HEADER(filesystem)
STD_HEADER(format)
STD_HEADER(forward_list)
STD_HEADER(fstream)
STD_HEADER(functional)
STD_HEADER(future)
STD_HEADER(initializer_list)
STD_HEADER(iomanip)
STD_HEADER(ios)
STD_HEADER(iosfwd)
STD_HEADER(iostream)
STD_HEADER(istream)
STD_HEADER(iterator)
STD_HEADER(latch)
STD_HEADER(limits)
STD_HEADER(list)
STD_HEADER(locale)
STD_HEADER(map)
STD_HEADER(mdspan)
STD_HEADER(memory)
STD_HEADER(memory_resource)
STD_HEADER(mutex)
STD_HEADER(new)
STD_HEADER(numbers)
STD_HEADER(numeric)
STD_HEADER(optional)
STD_HEADER(ostream)
STD_HEADER(print)
STD_HEADER(queue)
STD_HEADER(random)
STD_HEADER(ranges)
STD_HEADER(ratio)
STD_HEADER(regex)
STD_HEADER(scoped_allocator)
STD_HEADER(semaphore)
STD_HEADER(set)
STD_HEADER(shared_mutex)
STD_HEADER(source_location)
STD_HEADER(span)
STD_HEADER(sstream)
STD_HEADER(stack)
STD_HEADER(stdexcept)
STD_HEADER(stop_token)
STD_HEADER(streambuf)
STD_HEADER(string)
STD_HEADER(string_view)
STD_HEADER(strstream)
STD_HEADER(syncstream)
STD_HEADER(system_error)
STD_HEADER(thread)
STD_HEADER(tuple)
STD_HEADER(type_traits)
STD_HEADER(typeindex)
STD_HEADER(typeinfo)
STD_HEADER(unordered_map)
STD_HEADER(unordered_set)
STD_HEADER(utility)
STD_HEADER(valarray)
STD_HEADER(variant)
STD_HEADER(vector)
